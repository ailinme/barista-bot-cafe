Cumplimiento de la rúbrica

1) Validación y saneamiento (Criterio 1)
- Abre la app (emulador/dispositivo o Chrome).
- En Registro/Login:
  - Correo vacío o con formato inválido → muestra error.
  - Teléfono con menos de 10 dígitos → muestra error.
  - Nombre con caracteres inválidos → muestra error.
  - Contraseña sin mayúscula/minúscula/número/símbolo → muestra error.
- Código relevante: lib/core/security/validators.dart.

2) Autenticación con Firebase + rate‑limit (Criterio 2)
- En Login, usa un usuario creado o regístrate primero.
  - Email/Password válidos → snackbar de éxito y navegación a Home.
  - Intenta repetidamente con credenciales inválidas para ver el rate‑limit.
- Código: FirebaseAuth en login/registro.

3) Gestión de secretos (Criterio 3)
- Revisa la inicialización en `lib/main.dart`:
  - En móvil: `SecureStorageStore` (Keychain/Keystore).
  - En web: `DefaultFirebaseOptions.web` para inicializar Firebase.
- Revisa `lib/core/security/secret_store.dart` para almacenamiento seguro.

4) Seguridad en tránsito + Pinning (Criterio 7)
- (Opcional si tienes backend propio) Configura `lib/core/network/auth_service.dart`:
  - Cambia `baseUrl` a tu dominio HTTPS.
  - Añade el pin SHA‑256 del certificado en `derCertPinsBase64`.
- Códigos: lib/core/network/secure_http_client.dart, lib/core/network/api_service.dart.

5) Permisos y privacidad JIT (Criterio 6)
- En Registro, tras validar y aceptar términos, se solicita permiso de notificaciones (Android 13+).
- Si se deniega, se muestra un aviso y la app continúa.
- Código: lib/core/permissions/permission_service.dart, register_screen.dart.

6) OWASP Mobile Top 10 y documentación (Criterios 8 y 9)
- Ver `docs/owasp_mapping.md` para M1, M2, M5, M8, M9.
- Ver `docs/security.md` y `docs/masvs_checklist.md` para controles y estado.

7) CI y calidad (Criterio 10)
- Pipeline: `.github/workflows/flutter.yml`.
- Ejecuta: `flutter analyze` y `flutter test`.
